//! CHIP-8 system font

use super::types::{C8Byte, C8Addr};

/// CHIP-8 system font struct
pub struct Font(Vec<C8Byte>);

/// Font data address in memory
pub const FONT_DATA_ADDR: C8Addr = 0;
/// Font char width
pub const FONT_CHAR_WIDTH: usize = 8;
/// Font char height
pub const FONT_CHAR_HEIGHT: usize = 5;

static SYSTEM_FONT_DATA: &'static [C8Byte] = &[
    0xF0, 0x90, 0x90, 0x90, 0xF0,   // 0
    0x20, 0x60, 0x20, 0x20, 0x70,   // 1
    0xF0, 0x10, 0xF0, 0x80, 0xF0,   // 2
    0xF0, 0x10, 0xF0, 0x10, 0xF0,   // 3
    0x90, 0x90, 0xF0, 0x10, 0x10,   // 4
    0xF0, 0x80, 0xF0, 0x10, 0xF0,   // 5
    0xF0, 0x80, 0xF0, 0x90, 0xF0,   // 6
    0xF0, 0x10, 0x20, 0x40, 0x40,   // 7
    0xF0, 0x90, 0xF0, 0x90, 0xF0,   // 8
    0xF0, 0x90, 0xF0, 0x10, 0xF0,   // 9
    0xF0, 0x90, 0xE0, 0x90, 0x90,   // A
    0xE0, 0x90, 0xE0, 0x90, 0xE0,   // B
    0xF0, 0x80, 0x80, 0x80, 0xF0,   // C
    0xE0, 0x90, 0x90, 0x90, 0xE0,   // D
    0xF0, 0x80, 0xF0, 0x80, 0xF0,   // E
    0xF0, 0x80, 0xF0, 0x80, 0x80    // F
];

impl Font {
    
    /// Create new system font
    pub fn new_system_font() -> Self {
        Font(SYSTEM_FONT_DATA.to_vec())
    }

    /// Get font data
    pub fn get_data(&self) -> &[u8] {
        &self.0
    }
}